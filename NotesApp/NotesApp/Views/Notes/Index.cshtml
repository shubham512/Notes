@model IEnumerable<NotesApp.Models.Note>
@{
    ViewData["Title"] = "Notes";
}

<div class="row">
    <div class="col-md-6">
        <h2>Create a note</h2>
        <form asp-action="Create" method="post" class="mb-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="mb-3">
                <label class="form-label">Title</label>
                <input name="Title" class="form-control" maxlength="200" required />
            </div>

            <div class="mb-3">
                <label class="form-label">Content</label>
                <textarea name="Content" class="form-control" rows="4"></textarea>
            </div>

            <div class="mb-3">
                <label class="form-label">Priority</label>
                <select name="Priority" class="form-select">
                    <option value="0">Low</option>
                    <option value="1">Medium</option>
                    <option value="2">High</option>
                </select>
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
        </form>
    </div>

    <div class="col-md-6">
        <h2 class="mb-3">Notes</h2>

        @if (!Model.Any())
        {
            <div class="alert alert-secondary">No notes yet. Create your first note.</div>
        }

        @foreach (var note in Model)
        {
            var priorityClass = note.Priority switch
            {
                NotesApp.Models.Priority.Low => "priority-low",
                NotesApp.Models.Priority.Medium => "priority-medium",
                NotesApp.Models.Priority.High => "priority-high",
                _ => ""
            };

            <div class="card note-card @priorityClass">
                <div class="card-body">
                    <h5 class="card-title d-flex justify-content-between">
                        <span>@note.Title</span>
                        <small class="text-muted">@note.CreatedAt.ToLocalTime().ToString("g")</small>
                    </h5>
                    <p class="card-text note-content">@note.Content</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <span class="badge @(
                                  note.Priority == NotesApp.Models.Priority.Low ? "bg-success" :
                                  note.Priority == NotesApp.Models.Priority.Medium ? "bg-warning text-dark" : "bg-danger"
                                                )">
                            @note.Priority
                        </span>
                        @if (note.UpdatedAt.HasValue)
                            {
                                <small class="text-muted ms-2">Updated @note.UpdatedAt.Value.ToLocalTime().ToString("g")</small>
                            }
                        </div>
                        <div>
                            <a asp-action="Edit" asp-route-id="@note.Id" class="btn btn-sm btn-outline-secondary">Edit</a>

                            <form asp-action="Delete" asp-route-id="@note.Id" method="post" class="d-inline">
                                <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Delete this note?');">Delete</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>